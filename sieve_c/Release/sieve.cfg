FEATURES {
    STARTADDRESS: default = $1000;
}
SYMBOLS {
    __STACKSIZE__:  type = weak, value = $0800; # 2k stack
    __STACKSTART__: type = weak, value = $8000;
    __ZPSTART__:    type = weak, value = $0080;
}
MEMORY {
    ZP:    start=$0000, size=$0100, type=rw, define=yes, fill=yes;
    STACK: start=$0100, size=$0100, type=rw, define=yes, fill=yes;
    RAMD:  start=$0200, size=$0100, type=rw, define=yes;
    RAM:   start=$0300, size=$7e00, type=rw, define=yes, fill=yes;
    ROM:   start=$8000, size=$9000;
}
SEGMENTS {
    ZEROPAGE: load = ZP,   type = zp;
    DATA:     load = ROM,  type = rw,  define = yes,  run = RAMD;
    BSS:      load = RAM,  type = bss, define = yes;
    HEAP:     load = RAM,  type = bss, define = yes, optional = yes; # must sit just below stack
    STARTUP:  load = ROM,  type = ro,  optional = yes;
    LOWCODE:  load = ROM,  type = ro,  optional = yes;
    ONCE:     load = ROM,  type = ro,  optional = yes;
    CODE:     load = ROM,  type = ro;
    RODATA:   load = ROM,  type = ro;
    VECTORS:  load = ROM,  type = ro,  start=$fffa;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
